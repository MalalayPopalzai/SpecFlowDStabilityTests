<?xml version="1.0"?>
<doc>
    <assembly>
        <name>D-Stability</name>
    </assembly>
    <members>
        <member name="T:D_Stability.D_StabilityRepository">
            <summary>
            The class representing the D_StabilityRepository element repository.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.Instance">
            <summary>
            Gets the singleton class instance representing the D_StabilityRepository element repository.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepository.#ctor">
            <summary>
            Repository class constructor.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.MaterialName">
            <summary>
            Gets or sets the value of variable MaterialName.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.MaterialColor">
            <summary>
            Gets or sets the value of variable MaterialColor.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.MaterialShading">
            <summary>
            Gets or sets the value of variable MaterialShading.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.ShearStrengthModel">
            <summary>
            Gets or sets the value of variable ShearStrengthModel.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.StochasticParameter">
            <summary>
            Gets or sets the value of variable StochasticParameter.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.ParameterName">
            <summary>
            Gets or sets the value of variable ParameterName.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.ListIndex">
            <summary>
            Gets or sets the value of variable ListIndex.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.ScenarioStageName">
            <summary>
            Gets or sets the value of variable ScenarioStageName.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.TreeItemIndex">
            <summary>
            Gets or sets the value of variable TreeItemIndex.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.DStability">
            <summary>
            The DStability folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.ContextMenu">
            <summary>
            The ContextMenu folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.Open">
            <summary>
            The Open folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.SaveProjectAs">
            <summary>
            The SaveProjectAs folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepository.SaveProjectAsConfirmation">
            <summary>
            The SaveProjectAsConfirmation folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders">
            <summary>
            Inner folder classes.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder">
            <summary>
            The DStabilityAppFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new DStability  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.NewProjectButton">
            <summary>
            The NewProjectButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.NewProjectButtonInfo">
            <summary>
            The NewProjectButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.ScenarioExpander">
            <summary>
            The ScenarioExpander item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.ScenarioExpanderInfo">
            <summary>
            The ScenarioExpander item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.ScenarioSelectionText">
            <summary>
            The ScenarioSelectionText item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.ScenarioSelectionTextInfo">
            <summary>
            The ScenarioSelectionText item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.TextYes">
            <summary>
            The TextYes item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.TextYesInfo">
            <summary>
            The TextYes item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.Ribbon">
            <summary>
            The Ribbon folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.PropertyPanel">
            <summary>
            The PropertyPanel folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.ResolutionList">
            <summary>
            The ResolutionList folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.GeometryEditorFolder">
            <summary>
            The GeometryEditorFolder folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.DStabilityAppFolder.ScenarioTreeView">
            <summary>
            The ScenarioTreeView folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.RibbonFolder">
            <summary>
            The RibbonFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Ribbon  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.FileTab">
            <summary>
            The FileTab item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.FileTabInfo">
            <summary>
            The FileTab item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.Open">
            <summary>
            The Open item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.OpenInfo">
            <summary>
            The Open item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.SaveAs">
            <summary>
            The SaveAs item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.SaveAsInfo">
            <summary>
            The SaveAs item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonFolder.RibbonTabs">
            <summary>
            The RibbonTabs folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder">
            <summary>
            The RibbonTabsFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new RibbonTabs  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.GeometryTab">
            <summary>
            The GeometryTab item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.GeometryTabInfo">
            <summary>
            The GeometryTab item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.MaterialsTab">
            <summary>
            The MaterialsTab item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.MaterialsTabInfo">
            <summary>
            The MaterialsTab item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.WaterTab">
            <summary>
            The WaterTab item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.WaterTabInfo">
            <summary>
            The WaterTab item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.StateTab">
            <summary>
            The StateTab item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.StateTabInfo">
            <summary>
            The StateTab item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.LoadsTab">
            <summary>
            The LoadsTab item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.LoadsTabInfo">
            <summary>
            The LoadsTab item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.ReinforcementsTab">
            <summary>
            The ReinforcementsTab item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.ReinforcementsTabInfo">
            <summary>
            The ReinforcementsTab item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.CalculateTab">
            <summary>
            The CalculateTab item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.CalculateTabInfo">
            <summary>
            The CalculateTab item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.ResultsTab">
            <summary>
            The ResultsTab item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.ResultsTabInfo">
            <summary>
            The ResultsTab item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.RibbonTabsFolder.Buttons">
            <summary>
            The Buttons folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder">
            <summary>
            The ButtonsFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Buttons  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.Geometry">
            <summary>
            The Geometry folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.Materials">
            <summary>
            The Materials folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.Water">
            <summary>
            The Water folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.State">
            <summary>
            The State folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.Loads">
            <summary>
            The Loads folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.Reinforcements">
            <summary>
            The Reinforcements folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.Calculate">
            <summary>
            The Calculate folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ButtonsFolder.Results">
            <summary>
            The Results folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.GeometryFolder">
            <summary>
            The GeometryFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Geometry  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.LayerSelectButton">
            <summary>
            The LayerSelectButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.LayerSelectButtonInfo">
            <summary>
            The LayerSelectButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.GeometryUndoButton">
            <summary>
            The GeometryUndoButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.GeometryUndoButtonInfo">
            <summary>
            The GeometryUndoButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.GeometryRedoButton">
            <summary>
            The GeometryRedoButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.GeometryRedoButtonInfo">
            <summary>
            The GeometryRedoButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.DrawGeometryShapeButton">
            <summary>
            The DrawGeometryShapeButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.DrawGeometryShapeButtonInfo">
            <summary>
            The DrawGeometryShapeButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.DrawExcavationButton">
            <summary>
            The DrawExcavationButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.DrawExcavationButtonInfo">
            <summary>
            The DrawExcavationButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.DrawElevationButton">
            <summary>
            The DrawElevationButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder.DrawElevationButtonInfo">
            <summary>
            The DrawElevationButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder">
            <summary>
            The MaterialsFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Materials  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder.MaterialsButton">
            <summary>
            The MaterialsButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder.MaterialsButtonInfo">
            <summary>
            The MaterialsButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.WaterFolder">
            <summary>
            The WaterFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.WaterFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Water  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.WaterFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.WaterFolder.WaterSelectButton">
            <summary>
            The WaterSelectButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.WaterFolder.WaterSelectButtonInfo">
            <summary>
            The WaterSelectButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.WaterFolder.DrawHeadLineButton">
            <summary>
            The DrawHeadLineButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.WaterFolder.DrawHeadLineButtonInfo">
            <summary>
            The DrawHeadLineButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.StateFolder">
            <summary>
            The StateFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.StateFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new State  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StateFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StateFolder.DrawStatePointButton">
            <summary>
            The DrawStatePointButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StateFolder.DrawStatePointButtonInfo">
            <summary>
            The DrawStatePointButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.LoadsFolder">
            <summary>
            The LoadsFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.LoadsFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Loads  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder.LoadsSelectButton">
            <summary>
            The LoadsSelectButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder.LoadsSelectButtonInfo">
            <summary>
            The LoadsSelectButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder.DrawUniformLoadButton">
            <summary>
            The DrawUniformLoadButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder.DrawUniformLoadButtonInfo">
            <summary>
            The DrawUniformLoadButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder.DrawLineLoadButton">
            <summary>
            The DrawLineLoadButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder.DrawLineLoadButtonInfo">
            <summary>
            The DrawLineLoadButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder">
            <summary>
            The ReinforcementsFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Reinforcements  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.ReinforcementsSelectButton">
            <summary>
            The ReinforcementsSelectButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.ReinforcementsSelectButtonInfo">
            <summary>
            The ReinforcementsSelectButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.DrawNailButton">
            <summary>
            The DrawNailButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.DrawNailButtonInfo">
            <summary>
            The DrawNailButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.DrawGeotextileButton">
            <summary>
            The DrawGeotextileButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.DrawGeotextileButtonInfo">
            <summary>
            The DrawGeotextileButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.DrawForbiddenLineButton">
            <summary>
            The DrawForbiddenLineButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder.DrawForbiddenLineButtonInfo">
            <summary>
            The DrawForbiddenLineButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.CalculateFolder">
            <summary>
            The CalculateFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Calculate  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateSelectButton">
            <summary>
            The CalculateSelectButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateSelectButtonInfo">
            <summary>
            The CalculateSelectButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateUndoButton">
            <summary>
            The CalculateUndoButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateUndoButtonInfo">
            <summary>
            The CalculateUndoButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateRedoButton">
            <summary>
            The CalculateRedoButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateRedoButtonInfo">
            <summary>
            The CalculateRedoButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSlipCircleButton">
            <summary>
            The DefineSlipCircleButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSlipCircleButtonInfo">
            <summary>
            The DefineSlipCircleButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSearchGridButton">
            <summary>
            The DefineSearchGridButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSearchGridButtonInfo">
            <summary>
            The DefineSearchGridButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineTangentLinesButton">
            <summary>
            The DefineTangentLinesButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineTangentLinesButtonInfo">
            <summary>
            The DefineTangentLinesButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineBishopBruteForceCalculationConstra">
            <summary>
            The DefineBishopBruteForceCalculationConstra item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineBishopBruteForceCalculationConstraInfo">
            <summary>
            The DefineBishopBruteForceCalculationConstra item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSwamLocationButton">
            <summary>
            The DefineSwamLocationButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSwamLocationButtonInfo">
            <summary>
            The DefineSwamLocationButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineTangentSwarmLocationButton">
            <summary>
            The DefineTangentSwarmLocationButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineTangentSwarmLocationButtonInfo">
            <summary>
            The DefineTangentSwarmLocationButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineUpliftVanParticleSwarmCalculationC">
            <summary>
            The DefineUpliftVanParticleSwarmCalculationC item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineUpliftVanParticleSwarmCalculationCInfo">
            <summary>
            The DefineUpliftVanParticleSwarmCalculationC item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSlipPlaneBoundariesButton">
            <summary>
            The DefineSlipPlaneBoundariesButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSlipPlaneBoundariesButtonInfo">
            <summary>
            The DefineSlipPlaneBoundariesButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineTwoCirclesOnTangentLineSlipPlaneBu">
            <summary>
            The DefineTwoCirclesOnTangentLineSlipPlaneBu item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineTwoCirclesOnTangentLineSlipPlaneBuInfo">
            <summary>
            The DefineTwoCirclesOnTangentLineSlipPlaneBu item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSlipPlaneButton">
            <summary>
            The DefineSlipPlaneButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.DefineSlipPlaneButtonInfo">
            <summary>
            The DefineSlipPlaneButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculationSettingsButton">
            <summary>
            The CalculationSettingsButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculationSettingsButtonInfo">
            <summary>
            The CalculationSettingsButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateButton">
            <summary>
            The CalculateButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateButtonInfo">
            <summary>
            The CalculateButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateAllStagesButton">
            <summary>
            The CalculateAllStagesButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.CalculateAllStagesButtonInfo">
            <summary>
            The CalculateAllStagesButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder.AnalysisMethodTypeButton">
            <summary>
            The AnalysisMethodTypeButton folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.AnalysisMethodTypeButtonFolder">
            <summary>
            The AnalysisMethodTypeButtonFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.AnalysisMethodTypeButtonFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new AnalysisMethodTypeButton  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.AnalysisMethodTypeButtonFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.AnalysisMethodTypeButtonFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.AnalysisMethodTypeButtonFolder.PARTDescriptionRun">
            <summary>
            The PARTDescriptionRun item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.AnalysisMethodTypeButtonFolder.PARTDescriptionRunInfo">
            <summary>
            The PARTDescriptionRun item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ResultsFolder">
            <summary>
            The ResultsFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ResultsFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Results  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder.ResultsSelectButton">
            <summary>
            The ResultsSelectButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder.ResultsSelectButtonInfo">
            <summary>
            The ResultsSelectButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder.CalculationOverviewButton">
            <summary>
            The CalculationOverviewButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder.CalculationOverviewButtonInfo">
            <summary>
            The CalculationOverviewButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder.SlipPlaneInspectorButton">
            <summary>
            The SlipPlaneInspectorButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder.SlipPlaneInspectorButtonInfo">
            <summary>
            The SlipPlaneInspectorButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder">
            <summary>
            The PropertyPanelFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new PropertyPanel  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.PropertyPanelTitle">
            <summary>
            The PropertyPanelTitle item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.PropertyPanelTitleInfo">
            <summary>
            The PropertyPanelTitle item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.ProbabilisticRadioButton">
            <summary>
            The ProbabilisticRadioButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.ProbabilisticRadioButtonInfo">
            <summary>
            The ProbabilisticRadioButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.LabelTextBox">
            <summary>
            The LabelTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.LabelTextBoxInfo">
            <summary>
            The LabelTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.NotesTextBox">
            <summary>
            The NotesTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.NotesTextBoxInfo">
            <summary>
            The NotesTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.CoordinatesTextBox">
            <summary>
            The CoordinatesTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.CoordinatesTextBoxInfo">
            <summary>
            The CoordinatesTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.Geometry">
            <summary>
            The Geometry folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.Materials">
            <summary>
            The Materials folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.State">
            <summary>
            The State folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.Loads">
            <summary>
            The Loads folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.Reinforcements">
            <summary>
            The Reinforcements folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.Calculate">
            <summary>
            The Calculate folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.PropertyPanelFolder.Results">
            <summary>
            The Results folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.GeometryFolder1">
            <summary>
            The GeometryFolder1 folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.GeometryFolder1.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Geometry  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder1.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder1.AreaTextBlock">
            <summary>
            The AreaTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder1.AreaTextBlockInfo">
            <summary>
            The AreaTextBlock item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder1.HighestPointTextBlock">
            <summary>
            The HighestPointTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder1.HighestPointTextBlockInfo">
            <summary>
            The HighestPointTextBlock item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder1.LowestPointTextBlock">
            <summary>
            The LowestPointTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryFolder1.LowestPointTextBlockInfo">
            <summary>
            The LowestPointTextBlock item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1">
            <summary>
            The MaterialsFolder1 folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Materials  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.FillDropDownButton">
            <summary>
            The FillDropDownButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.FillDropDownButtonInfo">
            <summary>
            The FillDropDownButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.CodeTextBox">
            <summary>
            The CodeTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.CodeTextBoxInfo">
            <summary>
            The CodeTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.MeanTextBox">
            <summary>
            The MeanTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.MeanTextBoxInfo">
            <summary>
            The MeanTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.StandardDeviationTextBox">
            <summary>
            The StandardDeviationTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.StandardDeviationTextBoxInfo">
            <summary>
            The StandardDeviationTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.UseAsStochasticToggleButton">
            <summary>
            The UseAsStochasticToggleButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.UseAsStochasticToggleButtonInfo">
            <summary>
            The UseAsStochasticToggleButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.ShearStrengthAboveDropDown">
            <summary>
            The ShearStrengthAboveDropDown item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.ShearStrengthAboveDropDownInfo">
            <summary>
            The ShearStrengthAboveDropDown item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.ShearStrengthBelowDropDown">
            <summary>
            The ShearStrengthBelowDropDown item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.ShearStrengthBelowDropDownInfo">
            <summary>
            The ShearStrengthBelowDropDown item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.ProbabilisticToggleButton">
            <summary>
            The ProbabilisticToggleButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.ProbabilisticToggleButtonInfo">
            <summary>
            The ProbabilisticToggleButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.SuTableUseAsStochasticToggleButton">
            <summary>
            The SuTableUseAsStochasticToggleButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.SuTableUseAsStochasticToggleButtonInfo">
            <summary>
            The SuTableUseAsStochasticToggleButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.SuTableVariationCoefficientTextBox">
            <summary>
            The SuTableVariationCoefficientTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.MaterialsFolder1.SuTableVariationCoefficientTextBoxInfo">
            <summary>
            The SuTableVariationCoefficientTextBox item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.StateFolder1">
            <summary>
            The StateFolder1 folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.StateFolder1.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new State  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StateFolder1.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StateFolder1.PopTextBox">
            <summary>
            The PopTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StateFolder1.PopTextBoxInfo">
            <summary>
            The PopTextBox item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.LoadsFolder1">
            <summary>
            The LoadsFolder1 folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.LoadsFolder1.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Loads  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder1.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder1.AngleTextBox">
            <summary>
            The AngleTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder1.AngleTextBoxInfo">
            <summary>
            The AngleTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder1.MagnitudeTextBox">
            <summary>
            The MagnitudeTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder1.MagnitudeTextBoxInfo">
            <summary>
            The MagnitudeTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder1.SpreadTextBox">
            <summary>
            The SpreadTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.LoadsFolder1.SpreadTextBoxInfo">
            <summary>
            The SpreadTextBox item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1">
            <summary>
            The ReinforcementsFolder1 folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Reinforcements  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.TensileStrengthTextBox">
            <summary>
            The TensileStrengthTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.TensileStrengthTextBoxInfo">
            <summary>
            The TensileStrengthTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.ReductionAreaTextBox">
            <summary>
            The ReductionAreaTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.ReductionAreaTextBoxInfo">
            <summary>
            The ReductionAreaTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.Direction">
            <summary>
            The Direction item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.DirectionInfo">
            <summary>
            The Direction item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.HorizontalSpacing">
            <summary>
            The HorizontalSpacing item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.HorizontalSpacingInfo">
            <summary>
            The HorizontalSpacing item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.Length">
            <summary>
            The Length item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.LengthInfo">
            <summary>
            The Length item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.Diameter">
            <summary>
            The Diameter item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.DiameterInfo">
            <summary>
            The Diameter item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.GroutDiameter">
            <summary>
            The GroutDiameter item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.GroutDiameterInfo">
            <summary>
            The GroutDiameter item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.CriticalAngle">
            <summary>
            The CriticalAngle item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.CriticalAngleInfo">
            <summary>
            The CriticalAngle item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.MaxPullForce">
            <summary>
            The MaxPullForce item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.MaxPullForceInfo">
            <summary>
            The MaxPullForce item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.PlasticMoment">
            <summary>
            The PlasticMoment item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.PlasticMomentInfo">
            <summary>
            The PlasticMoment item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.BendingStiffness">
            <summary>
            The BendingStiffness item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ReinforcementsFolder1.BendingStiffnessInfo">
            <summary>
            The BendingStiffness item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1">
            <summary>
            The CalculateFolder1 folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Calculate  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.ToggleButtonSlipPlane">
            <summary>
            The ToggleButtonSlipPlane item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.ToggleButtonSlipPlaneInfo">
            <summary>
            The ToggleButtonSlipPlane item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.MinCircleDepth">
            <summary>
            The MinCircleDepth item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.MinCircleDepthInfo">
            <summary>
            The MinCircleDepth item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.CenterXTextBox">
            <summary>
            The CenterXTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.CenterXTextBoxInfo">
            <summary>
            The CenterXTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.CenterZTextBox">
            <summary>
            The CenterZTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.CenterZTextBoxInfo">
            <summary>
            The CenterZTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.RadiusTextBox">
            <summary>
            The RadiusTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculateFolder1.RadiusTextBoxInfo">
            <summary>
            The RadiusTextBox item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1">
            <summary>
            The ResultsFolder1 folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Results  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.FactorOfSafetyTextBlock">
            <summary>
            The FactorOfSafetyTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.FactorOfSafetyTextBlockInfo">
            <summary>
            The FactorOfSafetyTextBlock item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.CenterCoordinateTextBlock">
            <summary>
            The CenterCoordinateTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.CenterCoordinateTextBlockInfo">
            <summary>
            The CenterCoordinateTextBlock item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.RadiusTextBlock">
            <summary>
            The RadiusTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.RadiusTextBlockInfo">
            <summary>
            The RadiusTextBlock item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.EffectiveStressTextBox">
            <summary>
            The EffectiveStressTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.EffectiveStressTextBoxInfo">
            <summary>
            The EffectiveStressTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.UpliftFactorTextBox">
            <summary>
            The UpliftFactorTextBox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.UpliftFactorTextBoxInfo">
            <summary>
            The UpliftFactorTextBox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.ConvergedResult">
            <summary>
            The ConvergedResult item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.ConvergedResultInfo">
            <summary>
            The ConvergedResult item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.ReliabilityIndexResult">
            <summary>
            The ReliabilityIndexResult item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.ReliabilityIndexResultInfo">
            <summary>
            The ReliabilityIndexResult item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.ParameterNameTextBlock">
            <summary>
            The ParameterNameTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.ParameterNameTextBlockInfo">
            <summary>
            The ParameterNameTextBlock item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.OwnerTextBlock">
            <summary>
            The OwnerTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.OwnerTextBlockInfo">
            <summary>
            The OwnerTextBlock item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.PhysicalValueTextBlock">
            <summary>
            The PhysicalValueTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.PhysicalValueTextBlockInfo">
            <summary>
            The PhysicalValueTextBlock item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.YieldStress">
            <summary>
            The YieldStress item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.YieldStressInfo">
            <summary>
            The YieldStress item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.POP">
            <summary>
            The POP item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.POPInfo">
            <summary>
            The POP item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.SliceLabelTextBlock">
            <summary>
            The SliceLabelTextBlock item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResultsFolder1.SliceLabelTextBlockInfo">
            <summary>
            The SliceLabelTextBlock item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder">
            <summary>
            The ResolutionListFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new ResolutionList  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.MmListBoxItem">
            <summary>
            The MmListBoxItem item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.MmListBoxItemInfo">
            <summary>
            The MmListBoxItem item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.DmListboxItem">
            <summary>
            The DmListboxItem item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.DmListboxItemInfo">
            <summary>
            The DmListboxItem item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.MListboxItem">
            <summary>
            The MListboxItem item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.MListboxItemInfo">
            <summary>
            The MListboxItem item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.selectedResolution">
            <summary>
            The selectedResolution item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ResolutionListFolder.selectedResolutionInfo">
            <summary>
            The selectedResolution item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.GeometryEditorFolderFolder">
            <summary>
            The GeometryEditorFolderFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.GeometryEditorFolderFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new GeometryEditorFolder  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryEditorFolderFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryEditorFolderFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryEditorFolderFolder.GeometryEditor">
            <summary>
            The GeometryEditor item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryEditorFolderFolder.GeometryEditorInfo">
            <summary>
            The GeometryEditor item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryEditorFolderFolder.Tracker">
            <summary>
            The Tracker item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.GeometryEditorFolderFolder.TrackerInfo">
            <summary>
            The Tracker item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeViewFolder">
            <summary>
            The ScenarioTreeViewFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeViewFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new ScenarioTreeView  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeViewFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeViewFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeViewFolder.AddScenarioButton">
            <summary>
            The AddScenarioButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeViewFolder.AddScenarioButtonInfo">
            <summary>
            The AddScenarioButton item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeViewFolder.ScenarioTreeItem">
            <summary>
            The ScenarioTreeItem folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder">
            <summary>
            The ScenarioTreeItemFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new ScenarioTreeItem  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.ScenarioTreeItem">
            <summary>
            The ScenarioTreeItem item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.ScenarioTreeItemInfo">
            <summary>
            The ScenarioTreeItem item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.ScenarioTreeItemText">
            <summary>
            The ScenarioTreeItemText item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.ScenarioTreeItemTextInfo">
            <summary>
            The ScenarioTreeItemText item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.Expander">
            <summary>
            The Expander item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.ExpanderInfo">
            <summary>
            The Expander item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.ScenarioText">
            <summary>
            The ScenarioText folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTreeItemFolder.ItemsHost">
            <summary>
            The ItemsHost folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ScenarioTextFolder">
            <summary>
            The ScenarioTextFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ScenarioTextFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new ScenarioText  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTextFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTextFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTextFolder.ScenarioActionButton">
            <summary>
            The ScenarioActionButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ScenarioTextFolder.ScenarioActionButtonInfo">
            <summary>
            The ScenarioActionButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ItemsHostFolder">
            <summary>
            The ItemsHostFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ItemsHostFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new ItemsHost  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ItemsHostFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ItemsHostFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ItemsHostFolder.StageTreeItem">
            <summary>
            The StageTreeItem folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ItemsHostFolder.CalculationTreeItem">
            <summary>
            The CalculationTreeItem folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ItemsHostFolder.TreeItemByIndex">
            <summary>
            The TreeItemByIndex folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.StageTreeItemFolder">
            <summary>
            The StageTreeItemFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.StageTreeItemFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new StageTreeItem  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StageTreeItemFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StageTreeItemFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StageTreeItemFolder.StageText">
            <summary>
            The StageText folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.StageTextFolder">
            <summary>
            The StageTextFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.StageTextFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new StageText  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StageTextFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StageTextFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StageTextFolder.StageText">
            <summary>
            The StageText item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StageTextFolder.StageTextInfo">
            <summary>
            The StageText item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StageTextFolder.StageActionButton">
            <summary>
            The StageActionButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.StageTextFolder.StageActionButtonInfo">
            <summary>
            The StageActionButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.CalculationTreeItemFolder">
            <summary>
            The CalculationTreeItemFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.CalculationTreeItemFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new CalculationTreeItem  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculationTreeItemFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculationTreeItemFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculationTreeItemFolder.CalculationText">
            <summary>
            The CalculationText folder.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.CalculationTextFolder">
            <summary>
            The CalculationTextFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.CalculationTextFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new CalculationText  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculationTextFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculationTextFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculationTextFolder.CalculationText">
            <summary>
            The CalculationText item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculationTextFolder.CalculationTextInfo">
            <summary>
            The CalculationText item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculationTextFolder.CalculationActionButton">
            <summary>
            The CalculationActionButton item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.CalculationTextFolder.CalculationActionButtonInfo">
            <summary>
            The CalculationActionButton item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.TreeItemByIndexFolder">
            <summary>
            The TreeItemByIndexFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.TreeItemByIndexFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new TreeItemByIndex  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.TreeItemByIndexFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.TreeItemByIndexFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.TreeItemByIndexFolder.TreeItemText">
            <summary>
            The TreeItemText item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.TreeItemByIndexFolder.TreeItemTextInfo">
            <summary>
            The TreeItemText item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder">
            <summary>
            The ContextMenuAppFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new ContextMenu  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MaterialListItem">
            <summary>
            The MaterialListItem item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MaterialListItemInfo">
            <summary>
            The MaterialListItem item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MaterialColorItem">
            <summary>
            The MaterialColorItem item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MaterialColorItemInfo">
            <summary>
            The MaterialColorItem item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MaterialShadingItem">
            <summary>
            The MaterialShadingItem item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MaterialShadingItemInfo">
            <summary>
            The MaterialShadingItem item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.BruteForce">
            <summary>
            The BruteForce item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.BruteForceInfo">
            <summary>
            The BruteForce item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.ParticleSwarm">
            <summary>
            The ParticleSwarm item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.ParticleSwarmInfo">
            <summary>
            The ParticleSwarm item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.GeneticAlgorithm">
            <summary>
            The GeneticAlgorithm item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.GeneticAlgorithmInfo">
            <summary>
            The GeneticAlgorithm item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.FixedPointRadius">
            <summary>
            The FixedPointRadius item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.FixedPointRadiusInfo">
            <summary>
            The FixedPointRadius item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.UpliftVanAnalysisMethod">
            <summary>
            The UpliftVanAnalysisMethod item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.UpliftVanAnalysisMethodInfo">
            <summary>
            The UpliftVanAnalysisMethod item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.SpencerAnalysisMethod">
            <summary>
            The SpencerAnalysisMethod item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.SpencerAnalysisMethodInfo">
            <summary>
            The SpencerAnalysisMethod item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.ShearStrengthModel">
            <summary>
            The ShearStrengthModel item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.ShearStrengthModelInfo">
            <summary>
            The ShearStrengthModel item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.EditScenario">
            <summary>
            The EditScenario item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.EditScenarioInfo">
            <summary>
            The EditScenario item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DuplicateScenario">
            <summary>
            The DuplicateScenario item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DuplicateScenarioInfo">
            <summary>
            The DuplicateScenario item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveScenarioUp">
            <summary>
            The MoveScenarioUp item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveScenarioUpInfo">
            <summary>
            The MoveScenarioUp item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveScenarioDown">
            <summary>
            The MoveScenarioDown item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveScenarioDownInfo">
            <summary>
            The MoveScenarioDown item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DeleteScenario">
            <summary>
            The DeleteScenario item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DeleteScenarioInfo">
            <summary>
            The DeleteScenario item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.AddStage">
            <summary>
            The AddStage item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.AddStageInfo">
            <summary>
            The AddStage item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.EditStage">
            <summary>
            The EditStage item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.EditStageInfo">
            <summary>
            The EditStage item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DuplicateStage">
            <summary>
            The DuplicateStage item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DuplicateStageInfo">
            <summary>
            The DuplicateStage item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveStageUp">
            <summary>
            The MoveStageUp item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveStageUpInfo">
            <summary>
            The MoveStageUp item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveStageDown">
            <summary>
            The MoveStageDown item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveStageDownInfo">
            <summary>
            The MoveStageDown item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DeleteStage">
            <summary>
            The DeleteStage item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DeleteStageInfo">
            <summary>
            The DeleteStage item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.AddCalculation">
            <summary>
            The AddCalculation item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.AddCalculationInfo">
            <summary>
            The AddCalculation item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.EditCalculation">
            <summary>
            The EditCalculation item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.EditCalculationInfo">
            <summary>
            The EditCalculation item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DuplicateCalculation">
            <summary>
            The DuplicateCalculation item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DuplicateCalculationInfo">
            <summary>
            The DuplicateCalculation item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveCalculationUp">
            <summary>
            The MoveCalculationUp item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveCalculationUpInfo">
            <summary>
            The MoveCalculationUp item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveCalculationDown">
            <summary>
            The MoveCalculationDown item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.MoveCalculationDownInfo">
            <summary>
            The MoveCalculationDown item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DeleteCalculation">
            <summary>
            The DeleteCalculation item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.ContextMenuAppFolder.DeleteCalculationInfo">
            <summary>
            The DeleteCalculation item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.OpenAppFolder">
            <summary>
            The OpenAppFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.OpenAppFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Open  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.OpenAppFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.OpenAppFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.OpenAppFolder.ButtonOpen">
            <summary>
            The ButtonOpen item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.OpenAppFolder.ButtonOpenInfo">
            <summary>
            The ButtonOpen item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.OpenAppFolder.Text1148">
            <summary>
            The Text1148 item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.OpenAppFolder.Text1148Info">
            <summary>
            The Text1148 item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsAppFolder">
            <summary>
            The SaveProjectAsAppFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsAppFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new SaveProjectAs  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsAppFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsAppFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsAppFolder.FilenameCombobox">
            <summary>
            The FilenameCombobox item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsAppFolder.FilenameComboboxInfo">
            <summary>
            The FilenameCombobox item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsAppFolder.ButtonSave">
            <summary>
            The ButtonSave item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsAppFolder.ButtonSaveInfo">
            <summary>
            The ButtonSave item info.
            </summary>
        </member>
        <member name="T:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsConfirmationAppFolder">
            <summary>
            The SaveProjectAsConfirmationAppFolder folder.
            </summary>
        </member>
        <member name="M:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsConfirmationAppFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new SaveProjectAsConfirmation  folder.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsConfirmationAppFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsConfirmationAppFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsConfirmationAppFolder.ButtonYes">
            <summary>
            The ButtonYes item.
            </summary>
        </member>
        <member name="P:D_Stability.D_StabilityRepositoryFolders.SaveProjectAsConfirmationAppFolder.ButtonYesInfo">
            <summary>
            The ButtonYes item info.
            </summary>
        </member>
        <member name="T:D_Stability.DrawGeometryMethod">
            <summary>
                Creates a Ranorex user code collection. A collection is used to publish user code methods to the user code library.
            </summary>
        </member>
        <member name="M:D_Stability.DrawGeometryMethod.ResetCalibration">
            <summary>
                Resets the previously saved calibration, execute this method after zooming/panning the editor.
            </summary>
        </member>
        <member name="M:D_Stability.DrawGeometryMethod.DrawOnEditor(System.String)">
            <summary>
                Draws the given geometry points in the geometry editor.
                This method will first perform a calibration sequence before starting the drawing action.
                Geometry string example:
                <example>"1.5,2.5;3.5,4.5;5.0,2.2</example>
            </summary>
        </member>
        <member name="M:D_Stability.DrawGeometryMethod.ClickOnFirstPoint(System.String)">
            <summary>
                Clicks on the first item in the given geometry.
            </summary>
        </member>
        <member name="M:D_Stability.DrawGeometryMethod.ClickOnPolygonCenter(System.String)">
            <summary>
                Clicks on the center of the given polygon.
            </summary>
        </member>
        <member name="M:D_Stability.DrawGeometryMethod.ClickOnLineCenter(System.String)">
            <summary>
                Clicks on the center of the given polygon.
            </summary>
        </member>
        <member name="M:D_Stability.DrawGeometryMethod.ClickInLoad(System.String)">
            <summary>
                Clicks inside a load with offset 1;1 from first point.
            </summary>
        </member>
        <member name="M:D_Stability.DrawGeometryMethod.DrawOnEditorWithDoubleClick(System.String)">
            <summary>
                Draws the given geometry points in the geometry editor.
                This method will first perform a calibration sequence before starting the drawing action.
                Geometry string example:
                <example>"1.5,2.5;3.5,4.5;5.0,2.2</example>
            </summary>
        </member>
        <member name="T:D_Stability.Helpers.GenerateFileName">
            <summary>
            Description of CreateFileName.
            </summary>
        </member>
        <member name="M:D_Stability.Helpers.GenerateFileName.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:D_Stability.Helpers.GenerateFileName.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:D_Stability.Helpers.CombineScenarioSelectionName">
            <summary>
            Description of UserCodeModule1.
            </summary>
        </member>
        <member name="M:D_Stability.Helpers.CombineScenarioSelectionName.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:D_Stability.Helpers.CombineScenarioSelectionName.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:D_Stability.ScenarioAndStagesContextMenuHelper">
            <summary>
            Evaluates context menu items in Scenarios and stages.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce">
             <summary>
            The ConfigureBishopBruteForce recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.SearchGrid">
            <summary>
            Gets or sets the value of variable SearchGrid.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.TangentLines">
            <summary>
            Gets or sets the value of variable TangentLines.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.SlipPlaneCircleDepth">
            <summary>
            Gets or sets the value of variable SlipPlaneCircleDepth.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureBishopBruteForce.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.ConfigureBishopFixedPointRadius">
             <summary>
            The ConfigureBishopFixedPointRadius recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.ConfigureBishopFixedPointRadius.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureBishopFixedPointRadius.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureBishopFixedPointRadius.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureBishopFixedPointRadius.SlipCircle">
            <summary>
            Gets or sets the value of variable SlipCircle.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureBishopFixedPointRadius.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.ConfigureBishopFixedPointRadius.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureBishopFixedPointRadius.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureBishopFixedPointRadius.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic">
             <summary>
            The ConfigureSpencerGenetic recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic.SlipPlane1">
            <summary>
            Gets or sets the value of variable SlipPlane1.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic.SlipPlane2">
            <summary>
            Gets or sets the value of variable SlipPlane2.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureSpencerGenetic.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.ConfigureSpencerSingleSlipPlane">
             <summary>
            The ConfigureSpencerSingleSlipPlane recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.ConfigureSpencerSingleSlipPlane.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureSpencerSingleSlipPlane.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureSpencerSingleSlipPlane.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureSpencerSingleSlipPlane.SlipPlane">
            <summary>
            Gets or sets the value of variable SlipPlane.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureSpencerSingleSlipPlane.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.ConfigureSpencerSingleSlipPlane.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureSpencerSingleSlipPlane.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureSpencerSingleSlipPlane.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm">
             <summary>
            The ConfigureUpliftVanParticleSwarm recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.Swarm1">
            <summary>
            Gets or sets the value of variable Swarm1.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.TangentSwarm">
            <summary>
            Gets or sets the value of variable TangentSwarm.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.SlipPlaneCircleDepth">
            <summary>
            Gets or sets the value of variable SlipPlaneCircleDepth.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.Swarm2">
            <summary>
            Gets or sets the value of variable Swarm2.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureUpliftVanParticleSwarm.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.ConfigureUpliftVanTwoCirclesTangent">
             <summary>
            The ConfigureUpliftVanTwoCirclesTangent recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.ConfigureUpliftVanTwoCirclesTangent.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureUpliftVanTwoCirclesTangent.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureUpliftVanTwoCirclesTangent.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.ConfigureUpliftVanTwoCirclesTangent.TwoCircles">
            <summary>
            Gets or sets the value of variable TwoCircles.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureUpliftVanTwoCirclesTangent.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.ConfigureUpliftVanTwoCirclesTangent.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureUpliftVanTwoCirclesTangent.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.ConfigureUpliftVanTwoCirclesTangent.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.EvaluateCalculationType">
             <summary>
            The EvaluateCalculationType recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.EvaluateCalculationType.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateCalculationType.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateCalculationType.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateCalculationType.CalculationSubTitle">
            <summary>
            Gets or sets the value of variable CalculationSubTitle.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateCalculationType.CalculationTitle">
            <summary>
            Gets or sets the value of variable CalculationTitle.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateCalculationType.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.EvaluateCalculationType.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateCalculationType.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateCalculationType.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists">
             <summary>
            The EvaluateIfSlipCircleExists recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists.PointInSlipCircle">
            <summary>
            Gets or sets the value of variable PointInSlipCircle.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists.PropertyPanelCaption">
            <summary>
            Gets or sets the value of variable PropertyPanelCaption.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateIfSlipCircleExists.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties">
             <summary>
            The EvaluateSlipCircleProperties recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.PointInSlipCircle">
            <summary>
            Gets or sets the value of variable PointInSlipCircle.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.PropertyPanelCaption">
            <summary>
            Gets or sets the value of variable PropertyPanelCaption.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.XCoordinate">
            <summary>
            Gets or sets the value of variable XCoordinate.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.ZCoordinate">
            <summary>
            Gets or sets the value of variable ZCoordinate.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.Radius">
            <summary>
            Gets or sets the value of variable Radius.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.EvaluateSlipCircleProperties.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.RedoCalculate">
             <summary>
            The RedoCalculate recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.RedoCalculate.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RedoCalculate.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.RedoCalculate.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RedoCalculate.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.RedoCalculate.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RedoCalculate.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RedoCalculate.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.RunCalculateAll">
             <summary>
            The RunCalculateAll recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.RunCalculateAll.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RunCalculateAll.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.RunCalculateAll.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RunCalculateAll.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.RunCalculateAll.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RunCalculateAll.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RunCalculateAll.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.RunCalculation">
             <summary>
            The RunCalculation recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.RunCalculation.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RunCalculation.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.RunCalculation.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RunCalculation.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.RunCalculation.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RunCalculation.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.RunCalculation.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.SelectProbabilisticInCalculationSettings">
             <summary>
            The SelectProbabilisticInCalculationSettings recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.SelectProbabilisticInCalculationSettings.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.SelectProbabilisticInCalculationSettings.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.SelectProbabilisticInCalculationSettings.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.SelectProbabilisticInCalculationSettings.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.SelectProbabilisticInCalculationSettings.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.SelectProbabilisticInCalculationSettings.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.SelectProbabilisticInCalculationSettings.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Calculate.UndoCalculate">
             <summary>
            The UndoCalculate recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Calculate.UndoCalculate.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.UndoCalculate.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Calculate.UndoCalculate.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.UndoCalculate.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Calculate.UndoCalculate.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.UndoCalculate.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Calculate.UndoCalculate.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.General.CloseAUT">
             <summary>
            The CloseAUT recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.General.CloseAUT.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.CloseAUT.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.CloseAUT.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.CloseAUT.CloseAutProcessIDVar">
            <summary>
            Gets or sets the value of variable CloseAutProcessIDVar.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.CloseAUT.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.General.CloseAUT.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.CloseAUT.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.General.CloseAUT.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.General.MaximizeApplication">
             <summary>
            The MaximizeApplication recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.General.MaximizeApplication.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.MaximizeApplication.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.MaximizeApplication.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.MaximizeApplication.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.General.MaximizeApplication.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.MaximizeApplication.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.General.MaximizeApplication.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.General.OpenFile">
             <summary>
            The OpenFile recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.General.OpenFile.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.OpenFile.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.OpenFile.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.OpenFile.OpenFileName">
            <summary>
            Gets or sets the value of variable OpenFileName.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.OpenFile.OpenFilePath">
            <summary>
            Gets or sets the value of variable OpenFilePath.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.OpenFile.OpenFolder">
            <summary>
            Gets or sets the value of variable OpenFolder.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.OpenFile.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.General.OpenFile.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.OpenFile.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.General.OpenFile.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.OpenFile.GetBinFolder">
            <summary>
            Returns the path to the Bin/Debug Folder of your project
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.OpenFile.GetTestFilePath(System.String,System.String)">
            <summary>
            Returns the full path to the test file
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.General.SaveAs">
             <summary>
            The SaveAs recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.General.SaveAs.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.SaveAs.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.SaveAs.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.SaveAs.filename">
            <summary>
            Gets or sets the value of variable filename.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.SaveAs.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.General.SaveAs.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.SaveAs.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.General.SaveAs.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.General.StartAUT">
             <summary>
            The StartAUT recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.General.StartAUT.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.StartAUT.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.StartAUT.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.StartAUT.StartAutProcessIDVar">
            <summary>
            Gets or sets the value of variable StartAutProcessIDVar.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.StartAUT.AppPathVar">
            <summary>
            Gets or sets the value of variable AppPathVar.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.StartAUT.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.General.StartAUT.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.StartAUT.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.General.StartAUT.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.General.Wait">
             <summary>
            The Wait recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.General.Wait.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.Wait.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.General.Wait.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.Wait.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.General.Wait.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.General.Wait.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.General.Wait.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.AddElevation">
             <summary>
            The AddElevation recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.AddElevation.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.AddElevation.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.AddElevation.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.AddElevation.Elevation">
            <summary>
            Gets or sets the value of variable Elevation.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.AddElevation.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.AddElevation.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.AddElevation.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.AddElevation.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.AddExcavation">
             <summary>
            The AddExcavation recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.AddExcavation.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.AddExcavation.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.AddExcavation.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.AddExcavation.Excavation">
            <summary>
            Gets or sets the value of variable Excavation.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.AddExcavation.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.AddExcavation.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.AddExcavation.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.AddExcavation.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties">
             <summary>
            The EvaluateGeneralLayerProperties recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Label">
            <summary>
            Gets or sets the value of variable Label.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Notes">
            <summary>
            Gets or sets the value of variable Notes.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Coordinates">
            <summary>
            Gets or sets the value of variable Coordinates.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Title">
            <summary>
            Gets or sets the value of variable Title.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateGeneralLayerProperties.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.EvaluateIfLayerExists">
             <summary>
            The EvaluateIfLayerExists recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.EvaluateIfLayerExists.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateIfLayerExists.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateIfLayerExists.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateIfLayerExists.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateIfLayerExists.PropertyPanelCaption">
            <summary>
            Gets or sets the value of variable PropertyPanelCaption.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateIfLayerExists.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.EvaluateIfLayerExists.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateIfLayerExists.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateIfLayerExists.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties">
             <summary>
            The EvaluateAllLayerProperties recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Label">
            <summary>
            Gets or sets the value of variable Label.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Notes">
            <summary>
            Gets or sets the value of variable Notes.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Coordinates">
            <summary>
            Gets or sets the value of variable Coordinates.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Area">
            <summary>
            Gets or sets the value of variable Area.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.HighestPoint">
            <summary>
            Gets or sets the value of variable HighestPoint.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.LowestPoint">
            <summary>
            Gets or sets the value of variable LowestPoint.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.EvaluateAllLayerProperties.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.ModifyLayerProperties">
             <summary>
            The ModifyLayerProperties recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.ModifyLayerProperties.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.ModifyLayerProperties.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.ModifyLayerProperties.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.ModifyLayerProperties.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.ModifyLayerProperties.Label">
            <summary>
            Gets or sets the value of variable Label.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.ModifyLayerProperties.Notes">
            <summary>
            Gets or sets the value of variable Notes.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.ModifyLayerProperties.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.ModifyLayerProperties.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.ModifyLayerProperties.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.ModifyLayerProperties.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.RedoGeometry">
             <summary>
            The RedoGeometry recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.RedoGeometry.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.RedoGeometry.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.RedoGeometry.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.RedoGeometry.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.RedoGeometry.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.RedoGeometry.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.RedoGeometry.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.DrawLayer">
             <summary>
            The DrawLayer recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.DrawLayer.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.DrawLayer.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.DrawLayer.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.DrawLayer.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.DrawLayer.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.DrawLayer.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.DrawLayer.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.DrawLayer.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.Calibrate">
             <summary>
            The Calibrate recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.Calibrate.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.Calibrate.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.Calibrate.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.Calibrate.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.Calibrate.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.Calibrate.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.Calibrate.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.UndoGeometry">
             <summary>
            The UndoGeometry recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.UndoGeometry.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.UndoGeometry.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.UndoGeometry.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.UndoGeometry.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.UndoGeometry.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.UndoGeometry.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.UndoGeometry.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Geometry.ZoomOut">
             <summary>
            The ZoomOut recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Geometry.ZoomOut.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.ZoomOut.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Geometry.ZoomOut.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.ZoomOut.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Geometry.ZoomOut.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.ZoomOut.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Geometry.ZoomOut.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Loads.AddLineLoad">
             <summary>
            The AddLineLoad recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Loads.AddLineLoad.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Loads.AddLineLoad.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Loads.AddLineLoad.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Loads.AddLineLoad.Load">
            <summary>
            Gets or sets the value of variable Load.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Loads.AddLineLoad.Magnitude">
            <summary>
            Gets or sets the value of variable Magnitude.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Loads.AddLineLoad.Angle">
            <summary>
            Gets or sets the value of variable Angle.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Loads.AddLineLoad.AngleOfDistribution">
            <summary>
            Gets or sets the value of variable AngleOfDistribution.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Loads.AddLineLoad.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Loads.AddLineLoad.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Loads.AddLineLoad.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Loads.AddLineLoad.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Loads.AddUniformLoad">
             <summary>
            The AddUniformLoad recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Loads.AddUniformLoad.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Loads.AddUniformLoad.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Loads.AddUniformLoad.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Loads.AddUniformLoad.Load">
            <summary>
            Gets or sets the value of variable Load.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Loads.AddUniformLoad.Magnitude">
            <summary>
            Gets or sets the value of variable Magnitude.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Loads.AddUniformLoad.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Loads.AddUniformLoad.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Loads.AddUniformLoad.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Loads.AddUniformLoad.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Materials.AssignMaterial">
             <summary>
            The AssignMaterial recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Materials.AssignMaterial.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.AssignMaterial.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.AssignMaterial.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.AssignMaterial.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.AssignMaterial.materialName">
            <summary>
            Gets or sets the value of variable materialName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.AssignMaterial.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Materials.AssignMaterial.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.AssignMaterial.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Materials.AssignMaterial.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Materials.EditMaterialFill">
             <summary>
            The EditMaterialFill recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Materials.EditMaterialFill.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.EditMaterialFill.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.EditMaterialFill.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.EditMaterialFill.MaterialColor">
            <summary>
            Gets or sets the value of variable MaterialColor.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.EditMaterialFill.MaterialShading">
            <summary>
            Gets or sets the value of variable MaterialShading.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.EditMaterialFill.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Materials.EditMaterialFill.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.EditMaterialFill.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Materials.EditMaterialFill.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Materials.EvaluateMaterialProperties">
             <summary>
            The EvaluateMaterialProperties recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Materials.EvaluateMaterialProperties.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.EvaluateMaterialProperties.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.EvaluateMaterialProperties.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.EvaluateMaterialProperties.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.EvaluateMaterialProperties.Label">
            <summary>
            Gets or sets the value of variable Label.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.EvaluateMaterialProperties.Notes">
            <summary>
            Gets or sets the value of variable Notes.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.EvaluateMaterialProperties.MaterialCode">
            <summary>
            Gets or sets the value of variable MaterialCode.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.EvaluateMaterialProperties.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Materials.EvaluateMaterialProperties.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.EvaluateMaterialProperties.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Materials.EvaluateMaterialProperties.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Materials.ModifyMaterialProperties">
             <summary>
            The ModifyMaterialProperties recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Materials.ModifyMaterialProperties.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.ModifyMaterialProperties.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.ModifyMaterialProperties.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.ModifyMaterialProperties.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.ModifyMaterialProperties.Label">
            <summary>
            Gets or sets the value of variable Label.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.ModifyMaterialProperties.Notes">
            <summary>
            Gets or sets the value of variable Notes.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.ModifyMaterialProperties.MaterialCode">
            <summary>
            Gets or sets the value of variable MaterialCode.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.ModifyMaterialProperties.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Materials.ModifyMaterialProperties.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.ModifyMaterialProperties.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Materials.ModifyMaterialProperties.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Materials.SelectProbabilisticInMaterial">
             <summary>
            The SelectProbabilisticInMaterial recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Materials.SelectProbabilisticInMaterial.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SelectProbabilisticInMaterial.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SelectProbabilisticInMaterial.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SelectProbabilisticInMaterial.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SelectProbabilisticInMaterial.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Materials.SelectProbabilisticInMaterial.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SelectProbabilisticInMaterial.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SelectProbabilisticInMaterial.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial">
             <summary>
            The SetProbabilisticSuTableInMaterial recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial.VariationCoefficient">
            <summary>
            Gets or sets the value of variable VariationCoefficient.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetProbabilisticSuTableInMaterial.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial">
             <summary>
            The SetProbabilisticValuesInMaterial recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.Mean">
            <summary>
            Gets or sets the value of variable Mean.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.StdDev">
            <summary>
            Gets or sets the value of variable StdDev.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.StochasticParameter">
            <summary>
            Gets or sets the value of variable StochasticParameter.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetProbabilisticValuesInMaterial.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Materials.SetShearStrengthModelAbove">
             <summary>
            The SetShearStrengthModelAbove recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Materials.SetShearStrengthModelAbove.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetShearStrengthModelAbove.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetShearStrengthModelAbove.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetShearStrengthModelAbove.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetShearStrengthModelAbove.ShearStrengthModel">
            <summary>
            Gets or sets the value of variable ShearStrengthModel.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetShearStrengthModelAbove.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Materials.SetShearStrengthModelAbove.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetShearStrengthModelAbove.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetShearStrengthModelAbove.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Materials.SetShearStrengthModelBelow">
             <summary>
            The SetShearStrengthModelBelow recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Materials.SetShearStrengthModelBelow.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetShearStrengthModelBelow.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetShearStrengthModelBelow.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetShearStrengthModelBelow.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Materials.SetShearStrengthModelBelow.ShearStrengthModel">
            <summary>
            Gets or sets the value of variable ShearStrengthModel.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetShearStrengthModelBelow.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Materials.SetShearStrengthModelBelow.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetShearStrengthModelBelow.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Materials.SetShearStrengthModelBelow.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Reinforcements.AddForbiddenLine">
             <summary>
            The AddForbiddenLine recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Reinforcements.AddForbiddenLine.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddForbiddenLine.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddForbiddenLine.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddForbiddenLine.ForbiddenLine">
            <summary>
            Gets or sets the value of variable ForbiddenLine.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddForbiddenLine.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Reinforcements.AddForbiddenLine.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddForbiddenLine.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddForbiddenLine.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Reinforcements.AddGeotextile">
             <summary>
            The AddGeotextile recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Reinforcements.AddGeotextile.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddGeotextile.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddGeotextile.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddGeotextile.EffectiveTensileStrength">
            <summary>
            Gets or sets the value of variable EffectiveTensileStrength.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddGeotextile.Geotextile">
            <summary>
            Gets or sets the value of variable Geotextile.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddGeotextile.ReductionArea">
            <summary>
            Gets or sets the value of variable ReductionArea.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddGeotextile.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Reinforcements.AddGeotextile.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddGeotextile.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddGeotextile.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Reinforcements.AddNail">
             <summary>
            The AddNail recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Reinforcements.AddNail.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddNail.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.Nail">
            <summary>
            Gets or sets the value of variable Nail.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.Direction">
            <summary>
            Gets or sets the value of variable Direction.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.HorizontalSpacing">
            <summary>
            Gets or sets the value of variable HorizontalSpacing.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.Length">
            <summary>
            Gets or sets the value of variable Length.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.DiameterNail">
            <summary>
            Gets or sets the value of variable DiameterNail.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.DiameterGrout">
            <summary>
            Gets or sets the value of variable DiameterGrout.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.CriticalAngle">
            <summary>
            Gets or sets the value of variable CriticalAngle.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.MaxPullForce">
            <summary>
            Gets or sets the value of variable MaxPullForce.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.PlasticMoment">
            <summary>
            Gets or sets the value of variable PlasticMoment.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Reinforcements.AddNail.BendingStiffness">
            <summary>
            Gets or sets the value of variable BendingStiffness.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddNail.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Reinforcements.AddNail.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddNail.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Reinforcements.AddNail.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Results.EvaluateResultsType">
             <summary>
            The EvaluateResultsType recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Results.EvaluateResultsType.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.EvaluateResultsType.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.EvaluateResultsType.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.EvaluateResultsType.PropertyPanelCaption">
            <summary>
            Gets or sets the value of variable PropertyPanelCaption.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.EvaluateResultsType.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Results.EvaluateResultsType.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.EvaluateResultsType.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Results.EvaluateResultsType.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Results.ValidateDesignPoint">
             <summary>
            The ValidateDesignPoint recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Results.ValidateDesignPoint.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateDesignPoint.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateDesignPoint.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateDesignPoint.Material">
            <summary>
            Gets or sets the value of variable Material.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateDesignPoint.PhysicalValue">
            <summary>
            Gets or sets the value of variable PhysicalValue.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateDesignPoint.ParameterName">
            <summary>
            Gets or sets the value of variable ParameterName.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateDesignPoint.ListIndex">
            <summary>
            Gets or sets the value of variable ListIndex.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateDesignPoint.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Results.ValidateDesignPoint.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateDesignPoint.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateDesignPoint.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Results.ValidateProbabilisticResults">
             <summary>
            The ValidateProbabilisticResults recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Results.ValidateProbabilisticResults.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateProbabilisticResults.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateProbabilisticResults.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateProbabilisticResults.Converged">
            <summary>
            Gets or sets the value of variable Converged.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateProbabilisticResults.ReliabilityIndex">
            <summary>
            Gets or sets the value of variable ReliabilityIndex.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateProbabilisticResults.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Results.ValidateProbabilisticResults.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateProbabilisticResults.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateProbabilisticResults.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Results.ValidateSafetyFactor">
             <summary>
            The ValidateSafetyFactor recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Results.ValidateSafetyFactor.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSafetyFactor.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSafetyFactor.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSafetyFactor.FactorOfSafety">
            <summary>
            Gets or sets the value of variable FactorOfSafety.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSafetyFactor.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Results.ValidateSafetyFactor.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSafetyFactor.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSafetyFactor.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Results.ValidateSlice">
             <summary>
            The ValidateSlice recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Results.ValidateSlice.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSlice.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSlice.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSlice.SliceLocation">
            <summary>
            Gets or sets the value of variable SliceLocation.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSlice.EffectiveStress">
            <summary>
            Gets or sets the value of variable EffectiveStress.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSlice.UpliftFactor">
            <summary>
            Gets or sets the value of variable UpliftFactor.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSlice.SliceName">
            <summary>
            Gets or sets the value of variable SliceName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSlice.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Results.ValidateSlice.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSlice.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSlice.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Results.ValidateSlipCircle">
             <summary>
            The ValidateSlipCircle recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Results.ValidateSlipCircle.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSlipCircle.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSlipCircle.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSlipCircle.Center">
            <summary>
            Gets or sets the value of variable Center.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateSlipCircle.Radius">
            <summary>
            Gets or sets the value of variable Radius.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSlipCircle.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Results.ValidateSlipCircle.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSlipCircle.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateSlipCircle.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Results.ValidateStateResult">
             <summary>
            The ValidateStateResult recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Results.ValidateStateResult.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateStateResult.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateStateResult.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateStateResult.POP">
            <summary>
            Gets or sets the value of variable POP.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.ValidateStateResult.YieldStress">
            <summary>
            Gets or sets the value of variable YieldStress.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateStateResult.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Results.ValidateStateResult.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateStateResult.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Results.ValidateStateResult.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Results.WaitForResult">
             <summary>
            The WaitForResult recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Results.WaitForResult.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.WaitForResult.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Results.WaitForResult.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.WaitForResult.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Results.WaitForResult.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Results.WaitForResult.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Results.WaitForResult.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.AddCalculation">
             <summary>
            The AddCalculation recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.AddCalculation.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddCalculation.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.AddCalculation.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.AddCalculation.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.AddCalculation.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddCalculation.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.AddCalculation.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddCalculation.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddCalculation.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.AddStage">
             <summary>
            The AddStage recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.AddStage.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddStage.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.AddStage.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.AddStage.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.AddStage.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddStage.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.AddStage.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddStage.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddStage.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.ChangeSelectionName">
             <summary>
            The ChangeSelectionName recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.ChangeSelectionName.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.ChangeSelectionName.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.ChangeSelectionName.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.ChangeSelectionName.NewSelectionName">
            <summary>
            Gets or sets the value of variable NewSelectionName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.ChangeSelectionName.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.ChangeSelectionName.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.ChangeSelectionName.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.ChangeSelectionName.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.AddScenario">
             <summary>
            The AddScenario recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.AddScenario.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddScenario.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.AddScenario.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddScenario.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.AddScenario.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddScenario.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.AddScenario.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario">
             <summary>
            The CollapseExpandScenario recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.BeforeExpander">
            <summary>
            Gets or sets the value of variable BeforeExpander.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.AfterExpander">
            <summary>
            Gets or sets the value of variable AfterExpander.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.CollapseExpandScenario.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector">
             <summary>
            The CollapseExpandStageSelector recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector.BeforeExpander">
            <summary>
            Gets or sets the value of variable BeforeExpander.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector.AfterExpander">
            <summary>
            Gets or sets the value of variable AfterExpander.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.CollapseExpandStageSelector.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation">
             <summary>
            The DeleteCalculation recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteCalculation.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.DeleteScenario">
             <summary>
            The DeleteScenario recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.DeleteScenario.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteScenario.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DeleteScenario.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DeleteScenario.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DeleteScenario.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteScenario.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.DeleteScenario.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteScenario.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteScenario.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.DeleteStage">
             <summary>
            The DeleteStage recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.DeleteStage.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteStage.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DeleteStage.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DeleteStage.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DeleteStage.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteStage.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.DeleteStage.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteStage.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DeleteStage.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation">
             <summary>
            The DuplicateCalculation recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateCalculation.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario">
             <summary>
            The DuplicateScenario recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateScenario.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.DuplicateStage">
             <summary>
            The DuplicateStage recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.DuplicateStage.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateStage.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DuplicateStage.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DuplicateStage.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.DuplicateStage.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateStage.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.DuplicateStage.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateStage.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.DuplicateStage.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EditCalculation">
             <summary>
            The EditCalculation recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EditCalculation.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditCalculation.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EditCalculation.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EditCalculation.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EditCalculation.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditCalculation.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EditCalculation.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditCalculation.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditCalculation.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EditScenario">
             <summary>
            The EditScenario recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EditScenario.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditScenario.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EditScenario.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EditScenario.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EditScenario.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditScenario.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EditScenario.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditScenario.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditScenario.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EditStage">
             <summary>
            The EditStage recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EditStage.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditStage.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EditStage.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EditStage.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EditStage.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditStage.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EditStage.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditStage.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EditStage.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled">
             <summary>
            The EvaluateCalculationDeleteEnabled recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.DeleteEnabled">
            <summary>
            Gets or sets the value of variable DeleteEnabled.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationDeleteEnabled.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled">
             <summary>
            The EvaluateCalculationUpDownEnabled recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.MoveUpEnabled">
            <summary>
            Gets or sets the value of variable MoveUpEnabled.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.MoveDownEnabled">
            <summary>
            Gets or sets the value of variable MoveDownEnabled.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateCalculationUpDownEnabled.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled">
             <summary>
            The EvaluateScenarioDeleteEnabled recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.DeleteEnabled">
            <summary>
            Gets or sets the value of variable DeleteEnabled.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioDeleteEnabled.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled">
             <summary>
            The EvaluateScenarioUpDownEnabled recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.MoveUpEnabled">
            <summary>
            Gets or sets the value of variable MoveUpEnabled.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.MoveDownEnabled">
            <summary>
            Gets or sets the value of variable MoveDownEnabled.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioUpDownEnabled.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled">
             <summary>
            The EvaluateStageDeleteEnabled recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.DeleteEnabled">
            <summary>
            Gets or sets the value of variable DeleteEnabled.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateStageDeleteEnabled.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists">
             <summary>
            The EvaluateIfCalculationExists recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.CalculationExists">
            <summary>
            Gets or sets the value of variable CalculationExists.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfCalculationExists.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists">
             <summary>
            The EvaluateIfScenarioExists recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists.ScenarioExists">
            <summary>
            Gets or sets the value of variable ScenarioExists.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfScenarioExists.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists">
             <summary>
            The EvaluateIfStageExists recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.StageExists">
            <summary>
            Gets or sets the value of variable StageExists.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfStageExists.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists">
             <summary>
            The EvaluateIfTreeItemByIndexExists recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.TreeItemExists">
            <summary>
            Gets or sets the value of variable TreeItemExists.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.TreeItemIndex">
            <summary>
            Gets or sets the value of variable TreeItemIndex.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateIfTreeItemByIndexExists.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable">
             <summary>
            The EvaluateScenarioItemsFocusable recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.TreeItemIndex">
            <summary>
            Gets or sets the value of variable TreeItemIndex.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioItemsFocusable.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName">
             <summary>
            The EvaluateScenarioName recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioName.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioSelectionButton">
             <summary>
            The EvaluateScenarioSelectionButton recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioSelectionButton.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioSelectionButton.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioSelectionButton.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioSelectionButton.ScenarioStageName">
            <summary>
            Gets or sets the value of variable ScenarioStageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioSelectionButton.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioSelectionButton.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioSelectionButton.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateScenarioSelectionButton.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled">
             <summary>
            The EvaluateStageUpDownEnabled recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.MoveUpEnabled">
            <summary>
            Gets or sets the value of variable MoveUpEnabled.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.MoveDownEnabled">
            <summary>
            Gets or sets the value of variable MoveDownEnabled.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateStageUpDownEnabled.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName">
             <summary>
            The EvaluateTreeItemName recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.TreeItemName">
            <summary>
            Gets or sets the value of variable TreeItemName.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.TreeItemIndex">
            <summary>
            Gets or sets the value of variable TreeItemIndex.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateTreeItemName.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties">
             <summary>
            The ModifySelectionProperties recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties.SelectionName">
            <summary>
            Gets or sets the value of variable SelectionName.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties.Notes">
            <summary>
            Gets or sets the value of variable Notes.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.ModifySelectionProperties.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown">
             <summary>
            The MoveCalculationUpOrDown recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.MoveUp">
            <summary>
            Gets or sets the value of variable MoveUp.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveCalculationUpOrDown.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown">
             <summary>
            The MoveScenarioUpOrDown recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.MoveUp">
            <summary>
            Gets or sets the value of variable MoveUp.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.ScenarioName">
            <summary>
            Gets or sets the value of variable ScenarioName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveScenarioUpOrDown.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown">
             <summary>
            The MoveStageUpOrDown recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.MoveUp">
            <summary>
            Gets or sets the value of variable MoveUp.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.MoveStageUpOrDown.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.SelectCalculation">
             <summary>
            The SelectCalculation recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.SelectCalculation.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectCalculation.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectCalculation.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectCalculation.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectCalculation.CalculationName">
            <summary>
            Gets or sets the value of variable CalculationName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectCalculation.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.SelectCalculation.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectCalculation.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectCalculation.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex">
             <summary>
            The SelectCalculationByIndex recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex.TreeItemIndex">
            <summary>
            Gets or sets the value of variable TreeItemIndex.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectCalculationByIndex.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.SelectScenario">
             <summary>
            The SelectScenario recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.SelectScenario.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectScenario.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectScenario.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectScenario.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectScenario.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.SelectScenario.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectScenario.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectScenario.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.SelectStage">
             <summary>
            The SelectStage recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.SelectStage.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectStage.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectStage.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectStage.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectStage.StageName">
            <summary>
            Gets or sets the value of variable StageName.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectStage.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.SelectStage.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectStage.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectStage.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties">
             <summary>
            The EvaluateSelectionProperties recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.SelectionName">
            <summary>
            Gets or sets the value of variable SelectionName.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.Notes">
            <summary>
            Gets or sets the value of variable Notes.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.PropertyPanelCaption">
            <summary>
            Gets or sets the value of variable PropertyPanelCaption.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.EvaluateSelectionProperties.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex">
             <summary>
            The SelectStageByIndex recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex.ScenarioIndex">
            <summary>
            Gets or sets the value of variable ScenarioIndex.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex.TreeItemIndex">
            <summary>
            Gets or sets the value of variable TreeItemIndex.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.StagesAndScenarios.SelectStageByIndex.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.State.AddStatePoint">
             <summary>
            The AddStatePoint recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.State.AddStatePoint.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.State.AddStatePoint.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.State.AddStatePoint.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.State.AddStatePoint.Geometry">
            <summary>
            Gets or sets the value of variable Geometry.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.State.AddStatePoint.StatePoint">
            <summary>
            Gets or sets the value of variable StatePoint.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.State.AddStatePoint.POP">
            <summary>
            Gets or sets the value of variable POP.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.State.AddStatePoint.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.State.AddStatePoint.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.State.AddStatePoint.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.State.AddStatePoint.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Water.DrawHeadLine">
             <summary>
            The DrawHeadLine recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Water.DrawHeadLine.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Water.DrawHeadLine.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.DrawHeadLine.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.DrawHeadLine.HeadLine">
            <summary>
            Gets or sets the value of variable HeadLine.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Water.DrawHeadLine.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Water.DrawHeadLine.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Water.DrawHeadLine.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Water.DrawHeadLine.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Water.EvaluateHeadLineProperties">
             <summary>
            The EvaluateHeadLineProperties recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Water.EvaluateHeadLineProperties.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Water.EvaluateHeadLineProperties.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.EvaluateHeadLineProperties.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.EvaluateHeadLineProperties.HeadLine">
            <summary>
            Gets or sets the value of variable HeadLine.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.EvaluateHeadLineProperties.Label">
            <summary>
            Gets or sets the value of variable Label.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.EvaluateHeadLineProperties.Notes">
            <summary>
            Gets or sets the value of variable Notes.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.EvaluateHeadLineProperties.Coordinates">
            <summary>
            Gets or sets the value of variable Coordinates.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Water.EvaluateHeadLineProperties.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Water.EvaluateHeadLineProperties.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Water.EvaluateHeadLineProperties.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Water.EvaluateHeadLineProperties.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:D_Stability.Recordings.Water.EvaluateIfHeadLineExists">
             <summary>
            The EvaluateIfHeadLineExists recording.
             </summary>
        </member>
        <member name="F:D_Stability.Recordings.Water.EvaluateIfHeadLineExists.repo">
            <summary>
            Holds an instance of the global::D_Stability.D_StabilityRepository repository.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Water.EvaluateIfHeadLineExists.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.EvaluateIfHeadLineExists.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.EvaluateIfHeadLineExists.HeadLine">
            <summary>
            Gets or sets the value of variable HeadLine.
            </summary>
        </member>
        <member name="P:D_Stability.Recordings.Water.EvaluateIfHeadLineExists.PropertyPanelCaption">
            <summary>
            Gets or sets the value of variable PropertyPanelCaption.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Water.EvaluateIfHeadLineExists.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:D_Stability.Recordings.Water.EvaluateIfHeadLineExists.Instance"/>.
            </summary>
        </member>
        <member name="M:D_Stability.Recordings.Water.EvaluateIfHeadLineExists.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:D_Stability.Recordings.Water.EvaluateIfHeadLineExists.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:Ranorex.AutomationHelpers.Modules.CollectRetryErrorMessagesModule">
            <summary>
            When placed in a test container with a retry count >= 1, collects all error messages even if one of the retries
            was successful and adds them to the report.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.Modules.CollectRetryErrorMessagesModule.GetErrorMessages(Ranorex.Core.Reporting.ITestContainerActivity)">
            <summary>
            Recursively collects all error messages from given test container
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.Modules.CollectRetryErrorMessagesModule.LogErrorMessages(System.Object,System.EventArgs)">
            <summary>
            Logs all collected error messages to the "After Test Suite" section of the Ranorex report
            </summary>
        </member>
        <member name="T:Ranorex.AutomationHelpers.Modules.EmailModule">
            <summary>
            Used to send emails from a testsuite.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.Modules.EmailModule.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.Subject">
            <summary>
            Gets or sets the value of the email subject.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.Body">
            <summary>
            Gets or sets the value of the email body.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.To">
            <summary>
            Gets or sets the value of the email recipients. Separate recipients by comma or semicolon.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.From">
            <summary>
            Gets or sets the value of the email sender.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.ServerHostname">
            <summary>
            Gets or sets the value of the email server hostname.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.ServerPort">
            <summary>
            Gets or sets the value of the email server port.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.UseSSL">
            <summary>
            Gets or sets whether SSL is used or not (true or false) to connect to the email server.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.Username">
            <summary>
            Gets or sets the value of the user name to use when connecting to the email server.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.Password">
            <summary>
            Gets or sets the value of the user password when connecting to the email server.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.SendEmailOnFailure">
            <summary>
            Gets or sets the value to send the mail when the test suite completes with a failure (<c>true</c> or <c>false</c>).
            </summary>
            <remarks>If <c>true</c> Sends an email when the test suite finishes with a failure.</remarks>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.SendEmailOnSuccess">
            <summary>
            Gets or sets the value to send the mail when the test suite completes successfully (<c>true</c> or <c>false</c>).
            </summary>
            <remarks>If <c>true</c> Sends an email when the test suite finishes with a success.</remarks>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.SendZippedReportOnComplete">
            <summary>
            Gets or sets whether the email should send the report as an attachement when the test suite finishes.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.SendPdfReportOnComplete">
            <summary>
            Gets or sets whether the email should send the pdf version of the report as an attachement when the test suite finishes.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.Modules.EmailModule.PdfReportCustomStylesheet">
            <summary>
            If <see cref="P:Ranorex.AutomationHelpers.Modules.EmailModule.SendPdfReportOnComplete"/> is set to true, this can be used to set a custom stylesheet.
            Don't set or set to an empty string to use the default stylesheet.
            See https://www.ranorex.com/blog/ranorex-report-to-pdf-conversion#stylesheet
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.Modules.EmailModule.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Sends the report via email after the test run has completed. Use this module in
            the TearDown of your test case to ensure that it is executed even on failing test runs.
            </summary>
            <remarks>You should not call this method directly. Instead, pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:Ranorex.AutomationHelpers.Modules.ReportToPDFModule">
            <summary>
            Allows conversion of the default Ranorex report to PDF.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.Modules.ReportToPDFModule.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.Modules.ReportToPDFModule.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Converts the Ranorex Report into PDF after the test run completed. Use this module in
            the TearDown of your TestCase to ensure that it is executed even on failing test runs.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:Ranorex.AutomationHelpers.Modules.CleanupRanorexReport.Cleanup">
            <summary>
            Used to cleanup and delete all Ranorex report related files from current testrun
            </summary>
        </member>
        <member name="T:Ranorex.AutomationHelpers.UserCodeCollections.DragNDropLibrary">
            <summary>
            A collection providing an advanced DragAndDrop method.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.DragNDropLibrary.DragAndDrop(Ranorex.Adapter,Ranorex.Adapter)">
            <summary>
            Picks the source element, drags it to the target element and drops it there.
            <param name="source">The element which should be dragged.</param>
            <param name="target">The element where the source element will be dropped.</param>
            </summary>
        </member>
        <member name="T:Ranorex.AutomationHelpers.UserCodeCollections.EmailLibrary">
            <summary>
            Used to send emails from a recording or module.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.EmailLibrary.SendEmail(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Sends an email.
            </summary>
            <param name="subject">Email subject</param>
            <param name="to">Email recipients, separated by comma or semicolon</param>
            <param name="from">Email sender</param>
            <param name="body">Email message</param>
            <param name="attachment">Path of a file to attach</param>
            <param name="serverHostname">Server hostname</param>
            <param name="serverPort">Server port</param>
            <param name="useSSL">Defines whether SSL is used or not (true or false)</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.EmailLibrary.SendEmail(System.String,System.String,System.String,System.String,System.String[],System.String,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Sends an email.
            </summary>
            <param name="subject">Email subject</param>
            <param name="to">Email recipients, separated by comma or semicolon</param>
            <param name="from">Email sender</param>
            <param name="body">Email message</param>
            <param name="attachments">Paths of files to attach</param>
            <param name="serverHostname">Server hostname</param>
            <param name="serverPort">Server port</param>
            <param name="useSSL">Defines whether SSL is used or not (true or false)</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
        </member>
        <member name="T:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary">
            <summary>
            A collection of useful file methods.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.WriteToFile(System.String,System.String,System.String)">
            <summary>
            Creates a log file containing a custom text in the output folder.
            </summary>
            <param name="text">Text that the log file should contain</param>
            <param name="filenamePrefix">Prefix used for the log filename</param>
            <param name="fileExtension">Extension of the log file</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.AppendStringToExistingFile(System.String,System.String,System.Boolean)">
            <summary>
            Opens an existing file and adds a new line of text at the end of it.
            </summary>
            <param name="text">The text to add to the file.</param>
            <param name="path">The Full qualified path to load the file including filename and extension.</param>
            <param name="addNewLine">If true, adds the text on a newline. Otherwise, adds it without a line break.</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.CheckFilesExist(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Checks if files in a directory exist.
            </summary>
            <param name="path">The relative or absolute path to search for the files</param>
            <param name="pattern">The pattern to search for in the filename</param>
            <param name="expectedCount">Number of expected files to be found</param>
            <param name="timeout">Defines the search timeout in seconds</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.DeleteFiles(System.String,System.String)">
            <summary>
            Deletes files.
            </summary>
            <param name="path">The relative or absolute path to search for the files</param>
            <param name="pattern">The pattern to search for in the filename</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.WaitForFile(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Repeatedly checks if files in a directory exist.
            </summary>
            <param name="path">The relative or absolute path to search for the files</param>
            <param name="pattern">The pattern to search for in the filename</param>
            <param name="duration">Defines the search timeout in milliseconds</param>
            <param name="interval">Sets the interval in milliseconds at which the files are checked for the pattern</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.ValidateFilesBinaryEqual(System.String,System.String)">
            <summary>
            Compares content of two binary files.
            </summary>
            <param name="filePath1">The relative or absolute path of the first file</param>
            <param name="filePath2">The relative or absolute path of the second file</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.ValidateFilesTextEqual(System.String,System.String)">
            <summary>
            Compares content of two text files.
            </summary>
            <param name="filePath1">The relative or absolute path of the first file</param>
            <param name="filePath2">The relative or absolute path of the second file</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.ValidateFilesTextEqual(System.String,System.String,System.Boolean)">
            <summary>
            Compares content of two text files.
            </summary>
            <param name="filePath1">The relative or absolute path of the first file</param>
            <param name="filePath2">The relative or absolute path of the second file</param>
            <param name="normalizeLineEndings">If true, line endings will be normalized before comparison.
            Original files will not be changed.</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.ValidateFileContainsText(System.String,System.String)">
            <summary>
            Checks if file contains text specified.
            </summary>
            <param name="filePath">The relative or absolute path to the file</param>
            <param name="text">The text to search for</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.ValidateFileContainsText(System.String,System.String,System.String)">
            <summary>
            Checks if file contains text specified.
            </summary>
            <param name="filePath">The relative or absolute path to the file</param>
            <param name="text">The text to search for</param>
            <param name="fileEncoding">Encoding of a file</param>
        </member>
        <member name="T:Ranorex.AutomationHelpers.UserCodeCollections.PopupWatcherLibrary">
            <summary>
            A collection of popup watcher helper methods.
            </summary>
        </member>
        <member name="P:Ranorex.AutomationHelpers.UserCodeCollections.PopupWatcherLibrary.Watchers">
            <summary>
            Gets the currently active watchers which were started using the <see cref="M:Ranorex.AutomationHelpers.UserCodeCollections.PopupWatcherLibrary.StartPopupWatcher(Ranorex.Core.Repository.RepoItemInfo,Ranorex.Core.Repository.RepoItemInfo)"/>
            method and have not been stopped using the <see cref="M:Ranorex.AutomationHelpers.UserCodeCollections.PopupWatcherLibrary.StopPopupWatcher(Ranorex.Core.Repository.RepoItemInfo,Ranorex.Core.Repository.RepoItemInfo)"/> method, yet.
            </summary>
            <value>
            The currently active watchers created using the <see cref="T:Ranorex.AutomationHelpers.UserCodeCollections.PopupWatcherLibrary"/> class.
            </value>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.PopupWatcherLibrary.StartPopupWatcher(Ranorex.Core.Repository.RepoItemInfo,Ranorex.Core.Repository.RepoItemInfo)">
            <summary>
            Waits for a popup window to appear and clicks an element to close the window.
            </summary>
            <param name="findElement">Element to wait for</param>
            <param name="clickElement">Element to click after the popup appears</param>
            <returns>Reference to a newly created <see cref="T:Ranorex.PopupWatcher"/></returns>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.PopupWatcherLibrary.PauseWhileExists(Ranorex.Core.Repository.RepoItemInfo)">
            <summary>
            Waits for a popup window to appear and pauses test run until it disappears.
            </summary>
            <param name="findElement">Element to wait for</param>
            <returns>Reference to a newly created <see cref="T:Ranorex.PopupWatcher"/></returns>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.PopupWatcherLibrary.StopPopupWatcher(Ranorex.Core.Repository.RepoItemInfo,Ranorex.Core.Repository.RepoItemInfo)">
            <summary>
            Stops and removes an active popup watcher.
            </summary>
            <param name="findElement">Element to wait for</param>
            <param name="clickElement">Element to click after the popup appears</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.PopupWatcherLibrary.StopAllPopupWatchers">
            <summary>
            Stops all active popup watchers.
            </summary>
        </member>
        <member name="T:Ranorex.AutomationHelpers.UserCodeCollections.StringLibrary">
            <summary>
            A collection of string helper methods.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.StringLibrary.ConcatStrings(System.String,System.String)">
            <summary>
            Concatenates two strings and returns the new string.
            </summary>
            <param name="value1">First string</param>
            <param name="value2">Second string</param>
            <returns>Concatenated string</returns>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.StringLibrary.GetRandomString(System.String)">
            <summary>
            Creates and returns a random string.
            </summary>
            <param name="length">Length of the returned string in characters. Default = 35. Lower values increase
            chance of duplicate strings.</param>
            <returns>Random string</returns>
        </member>
        <member name="T:Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary">
            <summary>
            A collection of useful general helper methods.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.KillProcess(System.String)">
            <summary>
            Kills a process.
            </summary>
            <param name="processname">Name of the process to kill</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.StartTimer(System.String)">
            <summary>
            Starts a new timer.
            </summary>
            <param name="timerName">Name of the timer</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.StopTimer(System.String)">
            <summary>
            Stops a timer.
            </summary>
            <param name="timerName">Name of the timer to stop</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.SystemLibrary.GetDateTimeAsString(System.String)">
            <summary>
            Returns the current time and date as a string in the specified format.
            </summary>
            <param name="expectedFormat">The format the time and date are returned in. Default = dd.MM.yyyy</param>
            <returns>The current time and date as a string.</returns>
        </member>
        <member name="T:Ranorex.AutomationHelpers.UserCodeCollections.ValidationLibrary">
            <summary>
            A collection of useful validation helper methods.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.ValidationLibrary.CompareValues(System.String,System.String)">
            <summary>
            Compares two values.
            </summary>
            <param name="value1">First value to compare</param>
            <param name="value2">Second value to compare</param>
        </member>
        <member name="T:Ranorex.AutomationHelpers.UserCodeCollections.WebLibrary">
            <summary>
            A collection of methods to help automate web and network-based tasks.
            </summary>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.WebLibrary.DownloadFile(System.String,System.String,System.Boolean)">
            <summary>
            Downloads a file and stores it locally.
            </summary>
            <param name="uri">The uri of the file to download</param>
            <param name="localPath">Local location where the file should be stored</param>
            <param name="overwriteExisting">true / false if existing file should be overwritten</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.WebLibrary.GetHttpStatusCode(System.String)">
            <summary>
            Returns the HTTP status code from a URL.
            </summary>
            <param name="url">The URL to query for the status code.</param>
        </member>
        <member name="M:Ranorex.AutomationHelpers.UserCodeCollections.WebLibrary.ReportFullPageScreenshot(Ranorex.Core.Repository.RepoItemInfo)">
            <summary>
            Takes screenshot of entire web page and reports it.
            </summary>
            <param name="repoItemInfo">Repository item</param>
        </member>
    </members>
</doc>
